angular.module('Show', ['ngSanitize','ng.ueditor','ui.bootstrap', 'ui.router', 'ngCookies','ngStorage','permission','ngDialog','ngResource']);
var baseUrl = "http://api.learn4me.com/api";
var ssoUrl = "http://sso.learn4me.com/login.php?refer=";

'use strict';

/**
 * Route configuration for the RDash module.
 */
angular.module('Show').config(['$httpProvider','$stateProvider', '$urlRouterProvider',
    function($httpProvider,$stateProvider, $urlRouterProvider) {

        $httpProvider.defaults.timeout = 5000;
        //interceptors
        $httpProvider.interceptors.push('httpInterceptor');

        ////set rest
        //RestangularProvider.setBaseUrl('http://localhost:8001/api')

        // For unmatched routes
        $urlRouterProvider.otherwise('/codehub');

        // Application routes
        $stateProvider
            .state('index', {
                url: '/',
                templateUrl: 'templates/codehub_table.html'
            })
            .state('login',{
                url:'/login',
                templateUrl: function (){
                    //TODO mock login
                    alert('请登陆/注册');
                    window.location.href = ssoUrl;
                }
            })
            //.state('mycode', {
            //    url: '/mycode',
            //    templateUrl: 'templates/mycode_table.html'
            //}).state('newcode',{
            //    url: '/newcode',
            //    templateUrl: 'templates/newcode.html',
            //    data: {
            //        permissions: {
            //            except: ['anonymous'],
            //            redirectTo: 'login'
            //        }
            //    }
            //})
            //.state('myimage', {
            //    url: '/myimage',
            //    templateUrl: 'templates/myimage_table.html'
            //})
            .state('codehub', {
                url: '/codehub',
                templateUrl: 'templates/codehub_table.html'
            })
            .state('imagehub', {
                url: '/imagehub',
                templateUrl: 'templates/imagehub_table.html'
            })
            .state('code', {
                url: '/code/:codeid/user/:userid',
                templateUrl: 'templates/single_code.html'
            })
            .state('issue',{
                url:'/code/:codeid/issue/:issueid',
                templateUrl: 'templates/issue.html'
            })
            .state('newissue',{
                url:'/code/:codeid/newissue',
                templateUrl: 'templates/newissue.html'
            })
            //.state('addstep',{
            //    url:'/addstep/:codeid',
            //    templateUrl: 'templates/newstep.html',
            //    data: {
            //        permissions: {
            //            except: ['anonymous'],
            //            redirectTo: 'login'
            //        }
            //    }
            //})
            //.state('CodeEditor',{
            //    url:'/editor/code/:codeid',
            //    templateUrl:'templates/newcode.html',
            //    data: {
            //        permissions: {
            //            except: ['anonymous'],
            //            redirectTo: 'login'
            //        }
            //    }
            //})
            //.state('StepEditor',{
            //    url:'/editor/step/:codeid/:stepid',
            //    templateUrl:'templates/newstep.html',
            //    data: {
            //        permissions: {
            //            except: ['anonymous'],
            //            redirectTo: 'login'
            //        }
            //    }
            //})
            .state('image', {
                url: '/image/:imageid',
                templateUrl: 'templates/single_image.html'
            });
    }
]);
/**
 * Created by zpl on 15-3-23.
 */
'use strict';

/**
 * Route run for the RDash module.
 */
angular.module('Show').run(function(Permission,SessionService){
    // Define anonymous role
    Permission.defineRole('anonymous', function (stateParams) {
        // If the returned value is *truthy* then the user has the role, otherwise they don't
        if (!SessionService.isLogin()) {
            return true; // Is anonymous
        }
        return false;
    });
})
;
/**
 * Created by zpl on 15-5-6.
 */
angular
    .module('Show')
    .controller('NewIssueCtrl', ['SessionService','$scope', '$stateParams','CodeAPIService', NewIssueCtrl]);

function NewIssueCtrl(SessionService,$scope,$stateParams,CodeAPIService) {
    var codeid =parseInt($stateParams.codeid);
    if(codeid == NaN){
        return;
    }
    var user =SessionService.getUserinfo();
    var userid = parseInt(user.userid);
    $scope.issue={
        code_id:codeid,
        author:userid,
        content:"",
        title:"",
        status:1,
        reply_to:0
    }
    $scope.flag={
        is_show:true,
        msg:'正在提交中'
    }
    //window.um = UE.getEditor('newissue');

    //func
    $scope.setPostContent = function(content){
        if($scope.editor == undefined || $scope.editor== null){
            return null;
        }
        $scope.editor.setContent(content);
    }
    $scope.getPostContent = function(){
        if($scope.editor == undefined || $scope.editor== null){
            return "";
        }
        var html =$scope.editor.getContent();
        return html;

    }
    $scope.newIssue = function(){
        $scope.issue.content=$scope.getPostContent();
        var user = SessionService.getUserinfo();
        CodeAPIService.addCodeIssue(user.userid,codeid,$scope.issue)
            .then(function(data){
                console.log(data);
                $scope.setPostContent("");
                window.location.href="/dashboard.html#/code/"+codeid+"/issue/"+data.id
            },function(err){
                console.log(err);
                alert('创建失败！请重试')
            })
    };
    $scope.ready = function(editor){
        $scope.editor = editor
    }
}
/**
 * Created by zpl on 15-4-8.
 */
angular
    .module('Show')
    .controller('NewStepCtrl', ['SessionService','$scope','$stateParams','MyCodeService','ngDialog','$localStorage','$location', 'Images',NewStepCtrl]);

function NewStepCtrl(SessionService,$scope,$stateParams,MyCodeService,ngDialog,$localStorage,$location,Images){
    $scope.newstep = {
        meta:{},
        cmds:[]
    };
    $scope.cmd = {
        is_replace:-1
    };
    $scope.stepinfo = {
        is_created:false,
        msg:"正在为您创建中，请稍等。。。",
        data:null
    };
   var user = SessionService.getUserinfo()
   $scope.images = []
    Images.query({id: user.userid, action: 'list'}).$promise.then(function(data){
        $scope.images = data;
        $localStorage.myImages =data
        var checked_str = '';
        var checked = -1;
        if($scope.newstep &&$scope.newstep.meta&& $scope.newstep.meta.image_id){
            checked = $scope.newstep.meta.image_id;
        }
        for (var i = data.length - 1; i >= 0; i--) {
            var image = data[i]
            if(checked == image.ImageId){
                checked_str = 'selected';
            }
            $('#newstepimage').append('<option value="'+image.ImageId+'" '+checked_str+'>'+image.ImageName+':'+image.Tag+'</option>');
            checked_str = ''
        };
        
    });
    $scope.stepid = $stateParams.stepid;
    $scope.codeid = $stateParams.codeid;
    if($scope.stepid != null){
        MyCodeService.getMyCodeOneStep($scope.codeid,$scope.stepid,function(data){
            if(data == null){
                $location.path('/code/'+$scope.codeid);
                return
            }else{
                $scope.newstep = data;
                var check = $('#newstepimage option[value='+data.meta.image_id+']')
                if(check != null){
                    check.attr('selected',true)
                }
                for(var i =0;i<data.cmds.length;i++){
                    if(data.cmds[i].Is_replace == 2){
                        $scope.cmd.is_replace = i;
                        break;
                    }
                }
            }
        })
    }else{
        $scope.newstep = {
            meta:{
                id:null,
                name:"",
                description:"",
                code_name:"",
                image_id:0,
                work_dir:"/root",
                code_id:parseInt($scope.codeid)
            },
            cmds:[
                    {Seq:1,Cmd:"",Args:"",Is_replace:1},
                    {Seq:2,Cmd:"",Args:"",Is_replace:1},
                    {Seq:3,Cmd:"",Args:"",Is_replace:1},
                    {Seq:4,Cmd:"",Args:"",Is_replace:1}
                ]
        };
    }

    $scope.next = function(){
        if ($scope.step.$invalid) {
            return false;
        }
        return true;
    }

    $scope.addCmd = function(){
        $scope.newstep.cmds.push({cmd:"",args:"",is_replace:false});
    }
    $scope.removeCmd = function(i){
        $scope.newstep.cmds[i] = {
            seq:0,
            cmd:"",
            args:"",
            is_replace:1
        }
        if(i == $scope.cmd.is_replace){
            $scope.cmd.is_replace = -1;
        }
    }
    $scope.upCmd = function(i){
        if(i >0){
            var tmp = $scope.newstep.cmds[i-1];
            $scope.newstep.cmds[i-1] = $scope.newstep.cmds[i];
            $scope.newstep.cmds[i] = tmp;
            var seq = $scope.newstep.cmds[i-1].seq;
            $scope.newstep.cmds[i-1].seq = $scope.newstep.cmds[i].seq;
            $scope.newstep.cmds[i].seq = seq;
        }
    }
    $scope.downCmd = function(i){
        var len = $scope.newstep.cmds.length;
        if(i< len-1){
            var tmp = $scope.newstep.cmds[i+1];
            $scope.newstep.cmds[i+1] = $scope.newstep.cmds[i];
            $scope.newstep.cmds[i] = tmp;
            var seq = $scope.newstep.cmds[i+1].seq;
            $scope.newstep.cmds[i+1].seq = $scope.newstep.cmds[i].seq;
            $scope.newstep.cmds[i].seq = seq;
        }
    }


    $scope.stepconfig ={
        headerTag: "h3",
        bodyTag: "fieldset",
        transitionEffect: "slideLeft",
        onStepChanging: function (event, currentIndex, newIndex)
        {
            // Allways allow previous action even if the current form is not valid!
            if (currentIndex > newIndex)
            {
                if(newIndex == 0){
                    $scope.stepinfo.is_created=false;

                    $scope.stepinfo.msg="正在为您创建中，请稍等。。。";
                }

                return true;
            }
            if(currentIndex == 0){
                if($scope.newstep.name == ""||$scope.newstep.description == "" || $scope.newstep.image_id == 0){
                    alert("请填写好表单");
                    return false;
                }
                MyCodeService.addMyCodeStep($stateParams.codeid,$scope.newstep.meta,function(data){
                    console.log(data);
                    //dialog.close();
                    if(data == null){
                        $scope.stepinfo.msg="服务器装逼被雷劈了。。。，请稍后在找它";
                    }else{
                        $scope.stepinfo.data = data;
                        $scope.stepid = data.meta.id;
                        $scope.stepinfo.is_created = true;
                    }
                })

                return true;
            }
            if(currentIndex == 1){
                $scope.stepinfo.is_created = false;
                if($scope.cmd.is_replace>=0)
                    $scope.newstep.cmds[$scope.cmd.is_replace].Is_replace =2;
                if($scope.stepinfo.data.meta.id == null){
                    $scope.stepinfo.is_created = false;
                    $scope.stepinfo.msg="创建失败，请回退到第一步重来吧";
                    return false;
                }
                MyCodeService.addMyCodeStepCmd($stateParams.codeid,$scope.stepinfo.data.meta.id,$scope.newstep.cmds,function(data){
                    console.log(data);
                    if(data == null){
                        $scope.stepinfo.msg="服务器装逼被雷劈了。。。，请稍后在找它";
                    }else{
                        $scope.stepinfo.msg="创建已经成功";
                        if($localStorage.addstepobj){
                            delete $localStorage.addstepobj;
                        }
                        $localStorage.addstepobj = data;
                        $scope.stepinfo.is_created = true;
                    }
                })
            }
            return true;
        },
        onStepChanged: function (event, currentIndex, priorIndex)
        {
            //// Used to skip the "Warning" step if the user is old enough.
            //if (currentIndex === 2 && Number($("#age-2").val()) >= 18)
            //{
            //    form.steps("next");
            //}
            //// Used to skip the "Warning" step if the user is old enough and wants to the previous step.
            //if (currentIndex === 2 && priorIndex === 3)
            //{
            //    form.steps("previous");
            //}
        },
        onFinishing: function (event, currentIndex)
        {
            return true;
        },
        onFinished: function (event, currentIndex)
        {
            alert("Submitted!");
        }
    }
    $('#step-create').steps($scope.stepconfig);

}
/**
 * Alerts Controller
 */

angular
    .module('Show')
    .controller('AlertsCtrl', ['$scope','$rootScope', AlertsCtrl]);

function AlertsCtrl($scope,$rootScope) {
    //$scope.alerts = [{
    //    type: 'success',
    //    msg: '欢迎来到码上跑!你可以随时随地运行你的代码,祝你玩的愉快!'
    //}, {
    //    type: 'danger',
    //    msg: '你有一个镜像被fork了!.'
    //}];
    //AlertOnceService.getAlert(function(data){
    //     $scope.alerts = data;
    //});
    $scope.alerts = [];
    $rootScope.$watch('data',function(){
        $scope.alerts = $rootScope.data;
    });


    $scope.addAlert = function() {
        $scope.alerts.push({
            msg: 'Another alert!'
        });
    };

    $scope.closeAlert = function(index) {
        $scope.alerts.splice(index, 1);
    };
}
/**
 * Created by zpl on 15-2-2.
 * code hub
 */

angular
    .module('Show')
    .controller('MyCodeHubCtrl', ['$scope','MyCodeService', MyCodeHubCtrl]);

function MyCodeHubCtrl($scope,MyCodeService) {
    $scope.flag = {};
    $scope.pagination =new Array()
    $scope.page = {
        total:0,
        page:1,
        num:5
    };
    $scope.flag.key= "";

    //func
    $scope.flag.search = function(){
        $scope.currentData(1);
    }
    $scope.currentData = function(index){
        if(index <1)
            return;
        $scope.page.page = index;
        $scope.flag.is_show = true;
        $scope.flag.msg = "正在加载。。。";
        MyCodeService.getHotCodes($scope.page.page,$scope.page.num,$scope.flag.key,function(err,data){
            if(data){
                if(data.length == 0){
                    $scope.flag.msg = "暂时没有数据。。您可以创建";
                }else{
                    $scope.codedata = data.list;
                    $scope.page.total = data.total;
                    $scope.page.page = data.page;
                    $scope.page.num = data.num;
                    $scope.pagination =new Array()
                    for(var i =1;i<=(data.total/data.num)+1;i++){
                        var page = {
                            is_active:(data.page==i?true:false),
                            index :i
                        }
                        $scope.pagination.push(page);
                    }
                    $scope.flag.is_show = false;
                }
            }else{
                $scope.flag.msg = "加载失败。。。！";
            }
        });
    }

    //init
    $scope.currentData(1,"");
}

/**
 * Created by zpl on 15-5-19.
 */
HeaderCtrl

angular
    .module('Show')
    .controller('HeaderCtrl', ['PictureService','$scope','SessionService', HeaderCtrl]);

function HeaderCtrl(PictureService,$scope,SessionService){

    $scope.flag = {}
    $scope.flag.loged = false;
    if(SessionService.isLogin()== true) {
        $scope.flag.loged = true;
        $scope.user = SessionService.getUserinfo();
        $scope.user_avatar = PictureService.ConvertKey2Src($scope.user.avatar,40,40);
    }

}
/**
 * Created by zpl on 15-2-2.
 * image hub
 */


angular
    .module('Show')
    .controller('MyImageHubCtrl', ['$scope', '$resource','Images', MyImageHubCtrl]);

function MyImageHubCtrl($scope,$resource,Images) {
    //var myimagelist = $resource('/dockerapi/images/json?all=0', {}, {}).query();
    //var myimagelist = [
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':2,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //];
    Images.query({}).$promise.then(function(data){
        $scope.imagedata = data;
        $scope.imagenum = $scope.imagedata.length;
        //for (var i=0;i<$scope.imagedata.length;i++ ) {
        //    $scope.forknum += $scope.imagedata[i].Fork;
        //}
    });
    //$scope.imagedata = myimagelist;
}


/**
 * Created by zpl on 15-5-6.
 */
angular
    .module('Show')
    .controller('IssuesCtrl', ['PictureService','$sce','SessionService','$scope', '$stateParams','MyCodeService','CodeAPIService', IssuesCtrl]);

function IssuesCtrl(PictureService,$sce,SessionService,$scope,$stateParams,MyCodeService,CodeAPIService) {
    var codeid = $stateParams.codeid;
    var issueid =parseInt($stateParams.issueid);
    if(isNaN(issueid)){
        return;
    }
    if(SessionService.isLogin() == true){
        $scope.is_login = true;
    }else{
        $scope.is_login = false;
    }
    $scope.flag = {};
    $scope.is_author = true;
    $scope.flag.is_show = true;
    $scope.pagination =new Array()
    $scope.newcomment={
        issue_id:issueid,
        author:0,
        content:"",
        status:1,
        reply_to:0
    }
    $scope.flag.issue = {
        is_show : false,
        msg :"正在加载。。",
        page : {
            total:0,
            page:1,
            num:5
        },
        key:"",
        data:[],
        issue:{}
    }
    $scope.flag.msg = "正在加载。。。";

    //func
    $scope.setPostContent = function(content){
        if($scope.editor == undefined || $scope.editor== null){
            return null;
        }
        $scope.editor.setContent(content);
    }
    $scope.getPostContent = function(){
        if($scope.editor == undefined || $scope.editor== null){
            return "";
        }
        var html =$scope.editor.getContent();
        return html;

    }
    $scope.newDiscuss = function(){
        $scope.newcomment.content=$scope.getPostContent();
        console.log($scope.newcomment);
        var user = SessionService.getUserinfo();
        var userid = parseInt(user.userid);
        if(isNaN(userid)){
            return;
        }
        $scope.newcomment.author = userid;
        $scope.newcomment.reply_to = $scope.flag.issue.issue.author.meta.id -0;
        CodeAPIService.addCodeIssueComment(user.userid,issueid,$scope.newcomment)
            .then(function(data){
                console.log(data);
                $scope.newcomment={
                    issue_id:issueid,
                    author:0,
                    content:"",
                    status:1,
                    reply_to:0
                }
                $scope.setPostContent("");
                $scope.currentData($scope.flag.issue.page.page,"");
            },function(err){
                console.log(err);
            })
    }

    $scope.replay_to_user = function(obj){
        if(typeof(obj.author.meta.id) == "string"){
            $scope.newcomment.reply_to = parseInt(obj.author.meta.id);
        }else{
            $scope.newcomment.reply_to = obj.author.meta.id - 0;
        }

        $scope.newcomment.content += '<div id="quote"><blockquote><font size="2"><a href="">' +
        '<font color="#999999">' +'test'+
        '发表于' +obj.create_date+
        '</font></a></font>' +
        '<br> ' +obj.content+
        '</blockquote></div><br/>&nbsp;&nbsp;';
        var user = SessionService.getUserinfo();
        if(typeof(user.userid) == "string"){
            $scope.newcomment.author = parseInt(user.userid);
        }else{
            $scope.newcomment.author = user.userid;
        }

        $scope.setPostContent($scope.newcomment.content);
    }
    $scope.flag.search = function(){
        $scope.currentData(1);
    }
    $scope.currentData = function(index){
        if(index <1)
            return;
        $scope.flag.issue.page.page = index;
        $scope.flag.issue.is_show = true;
        $scope.flag.issue.msg = "正在加载。。。";
        CodeAPIService.getIssuesComments(issueid,$scope.flag.issue.page.page,$scope.flag.issue.page.num,$scope.flag.issue.key).
            then(function(data){
                $scope.flag.issue.page.total = data.total;
                $scope.flag.issue.page.page = data.page;
                $scope.flag.issue.page.num = data.num;
                $scope.flag.issue.data = data.list;
                if(data.list != null){
                    for(var i=0;i<data.list.length;i++){
                        data.list[i].content = $sce.trustAsHtml(data.list[i].content);
                        data.list[i].create_date = data.list[i].create_date.split('.')[0];
                        data.list[i].author = {};
                        data.list[i].author.avatar = PictureService.ConvertKey2Src(data.list[i].Author.info.Avatar,120,120);
                        data.list[i].author.meta = data.list[i].Author.meta
                    }
                }

                $scope.flag.issue.issue = data.issue;
                $scope.flag.issue.issue.avatar = PictureService.ConvertKey2Src(data.issue.author.info.Avatar,120,120);
                $scope.flag.issue.is_show = true;
                $scope.pagination = [];
                for(var i =1;i<=(data.total/data.num)+1;i++){
                    var page = {
                        is_active:(data.page==i?true:false),
                        index :i
                    }
                    $scope.pagination.push(page);
                }
            },function(err){
                $scope.flag.issue.is_show = false;
                $scope.flag.issue.msg = err;
            })
    }
    $scope.ready = function(editor){
        $scope.editor = editor
    }

    $scope.currentData(1,"");
}
/**
 * Master Controller
 */

angular.module('Show')
    .controller('MasterCtrl', ['PictureService','$scope', '$cookieStore','SessionService', MasterCtrl]);

function MasterCtrl(PictureService,$scope, $cookieStore,SessionService) {

    //func
    $scope.logout = function(){
        SessionService.logout();
    }
    //init
    $scope.flag = {};
    $scope.flag.loged = false;
    if(SessionService.isLogin() == true){
        $scope.user = SessionService.getUserinfo();
        $scope.flag.loged = true;
        $scope.user_avatar = PictureService.ConvertKey2Src($scope.user.avatar,40,40);
    }else{
        $scope.flag.loged = false;
    }
}
/**
 * Created by zpl on 15-2-2.
 * 我的代码
 */
angular
    .module('Show')
    .controller('MyCodeCtrl', ['$scope','MyCodeService','$localStorage', MyCodeCtrl]);

function MyCodeCtrl($scope,MyCodeService,$localStorage) {
    $scope.$storage = $localStorage.$default({
        x: 42,
        codes:{},
    });
    //$scope.codedata = CodeAPIService.one('code',1).getList();
    $scope.codedata = [];

    MyCodeService.getMyCode(function(data){
        if(data instanceof Array){
            $scope.codedata = data;
        }else{
            $scope.codedata.push(data);
        }
    });
    console.log($scope.codedata)
    $scope.newCode = function(){
        alert('点击这个按钮就可以新建一个代码!代码页面没写,意思意思');
    }
}

/**
 * Created by zpl on 15-2-2.
 * 我的镜像
 */

angular
    .module('Show')
    .controller('MyImageCtrl', ['$scope','$resource','Images', '$cookies', MyImageCtrl]);

function MyImageCtrl($scope,$resource,Images,$cookies) {
    //var imagequery = $resource('/dockerapi/images/:id/:action', {id: '@id',action:'list' }, {});
    //$scope.imagedata = imagequery.query({id:1}, function() {
    //});
    //$cookieStore.put("token","aa");
    //alert($cookies.token);

    var currentid = parseInt($cookies.u_id);
    var currentname = $cookies.u_name;
    $scope.imagenum = 0;
    $scope.forknum = 0;
    Images.query({id: currentid, action: 'list'}).$promise.then(function(data){
        $scope.imagedata = data;
        $scope.imagenum = $scope.imagedata.length;
        for (var i=0;i<$scope.imagedata.length;i++ ) {
            $scope.forknum += $scope.imagedata[i].Fork;
        }
    });
    //var myimagelist = [
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':2
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':2
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':2
    //    },
    //];
    //$scope.imagedata = myimagelist;
}


/**
 * Created by zpl on 15-3-18.
 * 新建代码
 */

angular
    .module('Show')
    .controller('NewCodeCtrl', ['$location','$scope','MyCodeService','AlertOnceService','$stateParams', 'ngDialog',NewCodeCtrl]);
function NewCodeCtrl($location,$scope,MyCodeService,AlertOnceService,$stateParams,ngDialog){
    // Injector
    $scope.newcodes = {
        name:"",
        description:""
    };
    var codeid = $stateParams.codeid;
    if(codeid != null){
        MyCodeService.getCodeInfoById(codeid,function(data){
            if(data == null){
                AlertOnceService.addNotify('danger',"添加失败,请稍后重试");
                $location.path('/code/'+data.id);
                return;
            }
            $scope.newcodes = data;

        })
    }
    $scope.submit2 = function(){
        console.log($scope.newcodes);
        if ($scope.code.$invalid) {
            return;
        }
        //创建新对象
        var dig = ngDialog.open({template:'templates/pop/wait4add.html'});
        MyCodeService.addCode2User($scope.newcodes,function(data){
            dig.close();
            if(data == null){
                AlertOnceService.addNotify('danger',"添加失败,请稍后重试");
                return;
            }
            $location.path('/code/'+data.id);
        });
    };
    $scope.reset2 = function(){
        $scope.newcodes ={
            name:"",
            description:""
        }
    };

}


/**
 * Created by zpl on 15-2-2.
 */


angular
    .module('Show')
    .controller('MySingleCodeCtrl', ['CodeAPIService','$scope', '$stateParams','MyCodeService','$localStorage','SessionService',MySingleCodeCtrl]);

function MySingleCodeCtrl(CodeAPIService,$scope,$stateParams,MyCodeService,$localStorage,SessionService) {
    var codeid = $stateParams.codeid;
    var code_userid = $stateParams.userid;
    $scope.flag = {};
    $scope.flag.is_show = true;
    $scope.is_author = false;
    if(SessionService.isLogin() == true){
        $scope.is_login = true;
        var u = SessionService.getUserinfo();
        if (u.userid == code_userid){
            $scope.is_author = true;
        }
    }else{
        $scope.is_login = false;
    }
    $scope.pagination =new Array()
    $scope.flag.issue = {
        is_show : false,
        msg :"正在加载。。",
        page : {
            total:0,
            page:1,
            num:5
        },
        key:"",
        data:[]
    }
    $scope.flag.msg = "正在加载。。。";

    //func
    $scope.starIt = function(){
        var user = SessionService.getUserinfo();
        if(user == null || user == undefined){
            return;
        }
        MyCodeService.updateCodeStar(user.userid,codeid,function(err,data){
            if(err){
                console.log(err);
            }
            if(data){
                $scope.code = data;
            }
        })
    };
    $scope.flag.search = function(){
        $scope.currentData(1);
    }
    $scope.currentData = function(index){
        if(index <1)
            return;
        $scope.flag.issue.page.page = index;
        $scope.flag.issue.is_show = true;
        $scope.flag.issue.msg = "正在加载。。。";
        CodeAPIService.getCodeIssues(codeid,$scope.flag.issue.page.page,$scope.flag.issue.page.num,$scope.flag.issue.key).
            then(function(data){
                $scope.flag.issue.page.total = data.total;
                $scope.flag.issue.page.page = data.page;
                $scope.flag.issue.page.num = data.num;
                $scope.flag.issue.data = data.list;
                $scope.flag.issue.is_show = true;
                for(var i =1;i<=(data.total/data.num)+1;i++){
                    var page = {
                        is_active:(data.page==i?true:false),
                        index :i
                    }
                    $scope.pagination.push(page);
                }
            },function(err){
                $scope.flag.issue.is_show = false;
                $scope.flag.issue.msg = err;
            })
    }
    $scope.newDiscuss = function(){
        alert('建立一个讨论,多人可以对这个进行交流');
    }

    MyCodeService.getMyOneCodeFromBack(codeid,function(data){
        $scope.code = data;
        MyCodeService.getMyCodeStep($scope.code.id,function(steps){
            console.log(steps);
            $scope.codesteps = steps;
            if(steps == null || steps == undefined){
                $scope.flag.is_show = true;
                $scope.flag.msg = "对不起没有内容，您可以新建。。。";
            }else{
                if(steps instanceof Array){
                    if(steps.length == 0){
                        $scope.flag.is_show = true;
                        $scope.flag.msg = "对不起没有内容，您可以新建。。。";
                    }else{
                        $scope.flag.is_show = false;
                    }
                }else{
                    $scope.flag.is_show = true;
                    $scope.flag.msg = "对不起没有内容，您可以新建。。。";
                }
            }
        });
        $scope.currentData(1,"");
    });

}

/**
 * Created by ZJY on 2015/2/4.
 */
angular
    .module('Show')
    .controller('MySingleImageCtrl', ['$scope', '$stateParams','Images','$location', 'Star', 'Fork', 'Image', '$cookies','loginService',  MySingleImageCtrl]);

function MySingleImageCtrl($scope,$stateParams,Images,$location,Star, Fork, Image, $cookies,loginService) {
    //var myimagelist = [
    //    {
    //        'imageid':1,
    //        'imagename':'c++',
    //        'status':1,
    //        'description':'镜像描述',
    //        'stars':50,
    //        'forknum':50,
    //        'runnum':100,
    //        'type':1,
    //        'typename':'本地程序',
    //        'date':'6月18'
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'golang',
    //        'status':1,
    //        'description':'镜像描述',
    //        'stars':50,
    //        'forknum':50,
    //        'runnum':100,
    //        'type':1,
    //        'typename':'本地程序',
    //        'date':'6月18'
    //    },
    //    {
    //        'imageid':3,
    //        'imagename':'python',
    //        'status':1,
    //        'type':1,
    //        'description':'镜像描述',
    //        'stars':50,
    //        'forknum':50,
    //        'runnum':100,
    //        'typename':'本地程序',
    //        'date':'6月18'
    //    },
    //    {
    //        'imageid':4,
    //        'imagename':'java',
    //        'status':2,
    //        'type':2,
    //        'description':'镜像描述',
    //        'stars':50,
    //        'forknum':50,
    //        'runnum':100,
    //        'typename':'网络程序',
    //        'date':'6月18'
    //    },
    //    {
    //        'imageid':5,
    //        'imagename':'web',
    //        'status':2,
    //        'type':1,
    //        'description':'镜像描述',
    //        'stars':50,
    //        'forknum':50,
    //        'runnum':100,
    //        'typename':'本地程序',
    //        'date':'6月18'
    //    },
    //];
    //$scope.image = [];
    //alert($stateParams.imageid);
    //loginService.login();
    var star;
    var fork;
    var currentuid = parseInt($cookies.u_id);
    var currentname = $cookies.u_name;
    Star.query({id:$stateParams.imageid,uid:currentuid}).$promise.then(function(data){
        star = parseInt(data.ID);
        if(data.ID > 0) {
            $scope.starcolor = "#808080";
        } else {
            $scope.starcolor = "";
        }
    });
    Fork.query({id:$stateParams.imageid,uid:currentuid}).$promise.then(function(data){
        fork = data.Forked;
        if(fork) {
            $scope.forkcolor = "#808080";
            document.getElementById("imageFork").isDisabled=true;
        }
    });
    //console.log(starbool);
    //if(star > 0) {
    //    $scope.starcolor = "#808080";
    //    starbool = false;
    //} else {
    //    $scope.starcolor = "";
    //    starbool = true;
    //}
    //$scope.starcolor = "#808080";
    //$scope.forkcolor = "";
    var myimage;
    Images.get({id: $stateParams.imageid, action: 'log'}).$promise.then(function(data){
        //$scope.image = data;
        myimage = data;
        if(data.UserId  == currentuid){
            $scope.forkcolor = "#808080";
        }
        if(data.UserId == currentuid) {
            document.getElementById("editButton").style.display = "block";
        }
        $scope.image = {
            imagename : data.ImageName,
            star : data.Star,
            fork : data.Fork,
            description : data.Descrip,
            date : data.Date,
            id : data.ImageId
        };
    });
    //$scope.image = myimagelist[$stateParams.imageid];
    //$scope.deleteImage = function() {
    //    alert("http://" + $location.host()+":9000");
    //    $window.location.href = "http://" + $location.host()+":9000/dashboard.html#/image/1";
    //}
    $scope.newDiscuss = function(){
        alert('建立一个讨论,多人可以对这个进行交流');
    }
    $scope.starImage = function () {
        //$scope.image.star += 1;
        //myimage.Star += 1;
        var postData = {
            uid:currentuid,
            image:myimage
        }
        Image.star({action:'star'},postData).$promise.then(function(c){
            Star.query({id:$stateParams.imageid,uid:currentuid}).$promise.then(function(data){
                star = parseInt(data.ID);
                if(star > 0) {
                    $scope.starcolor = "#808080";
                } else {
                    $scope.starcolor = "";
                }
            });
            Images.get({id: $stateParams.imageid, action: 'log'}).$promise.then(function(data){
                $scope.image.star = data.Star;
            });
        }, function(err){
            //$scope.hideLoader();
            //$scope.error = err.data;
            alert("failure");
            return false;
        });
    }
    $scope.forkImage = function () {
        if(currentuid==myimage.UserId ||  ($scope.forkcolor == "#808080")) {
            return;
        }
        var postData = {
            uid:currentuid,
            uname:currentname,
            image:myimage
        }
        Image.fork({action:'fork'},postData).$promise.then(function(c){
            Fork.query({id:$stateParams.imageid,uid:currentuid}).$promise.then(function(data){
                fork = data.Forked;
                if(fork) {
                    $scope.forkcolor = "#808080";
                }
            });
            Images.get({id: $stateParams.imageid, action: 'log'}).$promise.then(function(data){
                $scope.image.fork = data.Fork;
            });
        }, function(err){
            //$scope.hideLoader();
            //$scope.error = err.data;
            alert("failure");
            return false;
        });
    }
    //$scope.editTerminal = function(){
    //}
}

/**
 * Created by Administrator on 2015/4/29.
 */
angular.module('Show')
    .directive('ngEnter', function ($timeout) {
        return function(scope, element, attrs) {
            element.bind("keydown keypress", function (event) {
                if(event.which === 13) {
                    //scope.$apply(function (){
                    //    scope.$eval(attrs.ngEnter);
                    //});
                    $timeout(function() {
                        // We must reevaluate the value in case it was changed by a subsequent
                        // watch handler in the digest.
                        scope.$eval(attrs.ngEnter);
                    }, 0, false);
                    event.preventDefault();
                }
            });
        };
    });
/**
 * Loading Directive
 * @see http://tobiasahlin.com/spinkit/
 */

angular
    .module('Show')
    .directive('rdLoading', rdLoading);

function rdLoading() {
    var directive = {
        restrict: 'AE',
        template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
    };
    return directive;
};
/**
 * Created by zpl on 15-4-9.
 */
angular
    .module('Show')
    .directive('steps', ['$compile',stepByStep]);
function stepByStep($compile){
    return {
        restrict : 'A',
        //compile: function (tEl) {
        //    return function(scope, element, attrs) {
        //        //var stepsEl;
        //        //
        //        //element.wrapInner('<div class="steps-wrapper">');
        //        //element.children('.steps-wrapper').append(tEl.context.innerHTML);
        //        //var content = $compile(element.contents())(scope);
        //        //$timeout(function () {
        //        //    element.children('.steps-wrapper').steps(scope.stepconfig);
        //        //})
        //        element.wrapInner('<div class="steps-wrapper">')
        //        var steps = element.children('.steps-wrapper').steps(scope.stepconfig);
        //
        //        scope.form = $compile(steps)(scope)
        //    }
        //},
        link : function(scope, element, attrs) {
            element.wrapInner('<div class="steps-wrapper">')
            var steps = element.children('.steps-wrapper').steps(scope.stepconfig);

            scope.form = $compile(steps)(scope)

        }
    }
}
/**
 * Widget Body Directive
 */

angular
    .module('Show')
    .directive('rdWidgetBody', rdWidgetBody);

function rdWidgetBody() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            loading: '@?',
            classes: '@?'
        },
        transclude: true,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Footer Directive
 */

angular
    .module('Show')
    .directive('rdWidgetFooter', rdWidgetFooter);

function rdWidgetFooter() {
    var directive = {
        requires: '^rdWidget',
        transclude: true,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Header Directive
 */

angular
    .module('Show')
    .directive('rdWidgetHeader', rdWidgetTitle);

function rdWidgetTitle() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            title: '@',
            icon: '@'
        },
        transclude: true,
        template: '<div class="widget-header"><i class="fa" ng-class="icon"></i> {{title}} <div class="pull-right" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Directive
 */

angular
    .module('Show')
    .directive('rdWidget', rdWidget);

function rdWidget() {
    var directive = {
        transclude: true,
        template: '<div class="widget" ng-transclude></div>',
        restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
        /* */
    }
};
/**
 * Created by zpl on 15-3-18.
 */
angular.module('Show').
    factory('AlertOnceService',['$rootScope',function($rootScope){
        return {
                addNotify:function(type,msg){
                    $rootScope.data.push({
                        type:type,
                        msg:msg
                    });
                },
                getAlert:function(callback){
                    callback($rootScope.data);
                }
            }
        }
    ]);
/**
 * Created by zpl on 15-3-16.
 */
angular.module('Show').
    factory('CodeAPIService',['$http','$q','RestfulService',function($http,$q,RestfulService){
        return {
            getCodesByUser: function(userid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/user/code/"+userid,
                    method:"GET"
                });
            },
            getCodeById: function(id){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+id,
                    method:"GET"
                });
            },
            addCode2User: function(userid,codeinfo){
                return RestfulService.restfulOp({
                    url:baseUrl+"/user/code/"+userid,
                    method:"POST",
                    data:codeinfo
                });

            },
            updateCode:function(userid,codeinfo){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeinfo.id,
                    method:"PUT",
                    data:codeinfo
                });

            },
            deleteCode:function(userid,codeid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid,
                    method:"DELETE"
                });

            },
            getCodeSteps:function(codeid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+codeid+"/step",
                    method:"GET"
                });
            },
            getCodeStepById: function(codeid,stepid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+codeid+"/step/"+stepid,
                    method:"GET"
                });

            },
            addCodeStep: function(userid,codeid,codestep){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step",
                    method:"POST",
                    data:codestep
                });

            },
            updateCodeStepCmd: function(userid,codeid,stepid,data){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step/"+stepid+"/cmd",
                    method:"PUT",
                    data:data
                })
            },
            updateCodeStep: function(userid,codeid,stepid,codestep){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step/"+stepid,
                    method:"PUT",
                    data:codestep
                });

            },
            deleteCodeStep: function(userid,codeid,stepid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step/"+stepid,
                    method:"DELETE"
                });

            },
            getCodeStepDetail: function(codeid,stepid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+codeid+"/step/"+stepid+"/detail",
                    method:"GET"
                });
            },
            updateCodeStepDetail: function(userid,codeid,stepid,codestepdetail){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step/"+stepid+"/detail",
                    method:"PUT",
                    data:codestepdetail
                });

            },
            coderun: function(imageid,runinfo){
                return RestfulService.restfulOp({
                    url:baseUrl+"/coderun/"+imageid,
                    method:"PUT",
                    data:runinfo
                });

            },
            coderunRes: function(runid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/coderun/"+runid,
                    method:"GET"
                });

            },
            updateCodeStar: function(userid,codeid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/star/"+userid+"/"+codeid,
                    method:"PUT",
                    data:{userid:userid,codeid:codeid}
                });
            },
            getHotCodes: function(page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/code?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            getCodeIssues: function(codeid,page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+codeid+"/issues?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            addCodeIssue: function(userid,codeid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/issue",
                    method:"POST",
                    data:obj
                });
            },
            updateCodeIssue: function(userid,codeid,issueid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/issue/"+issueid,
                    method:"PUT",
                    data:obj
                });
            },
            deleteCodeIssue: function(userid,codeid,issueid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/issue/"+issueid,
                    method:"DELETE"
                });
            },
            getIssuesComments: function(issueid,page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/issue/"+issueid+"/comments?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            addCodeIssueComment: function(userid,issueid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/issue/"+userid+"/"+issueid+"/comment",
                    method:"POST",
                    data:obj
                });
            },
            updateCodeIssueComment: function(userid,issueid,commentid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/issue/"+userid+"/"+issueid+"/comment/"+commentid,
                    method:"PUT",
                    data:obj
                });
            },
            deleteCodeIssueComment: function(userid,issueid,commentid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/issue/"+userid+"/"+issueid+"/comment/"+commentid,
                    method:"DELETE"
                });
            },
            getImageIssues: function(imageid,page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/"+imageid+"/issues?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            addImageIssue: function(userid,imageid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/"+userid+"/"+imageid+"/issue",
                    method:"POST",
                    data:obj
                });
            },
            updateImageIssue: function(userid,imageid,issueid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/"+userid+"/"+imageid+"/issue/"+issueid,
                    method:"PUT",
                    data:obj
                });
            },
            deleteImageIssue: function(userid,imageid,issueid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/"+userid+"/"+imageid+"/issue/"+issueid,
                    method:"DELETE"
                });
            },
            getImageIssuesComments: function(issueid,page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/issue/"+issueid+"/comments?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            addImageIssueComment: function(userid,issueid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/issue/"+userid+"/"+issueid+"/comment",
                    method:"POST",
                    data:obj
                });
            },
            updateImageIssueComment: function(userid,issueid,commentid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/issue/"+userid+"/"+issueid+"/comment/"+commentid,
                    method:"PUT",
                    data:obj
                });
            },
            deleteImageIssueComment: function(userid,issueid,commentid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/issue/"+userid+"/"+issueid+"/comment/"+commentid,
                    method:"DELETE"
                });
            }

        }
    }])
angular.module('Show')
    .factory('Fork', ['$resource',function($resource){
        return $resource('/dockerapi/fork/:uid/:id',{uid:'@uid',id:'@id'},{
            'query':{isArray:false,method:'GET'}
        })
    }])
/**
 * Created by zpl on 15-3-22.
 * 拦截器
 */
angular.module('Show').
    factory('httpInterceptor',['$q','$cookies', function($q,$cookies){
        var isNeedAuth=function(uri,method){
            //check url is contain api
            if(uri.indexOf('api')){
                if(uri.split('coderun')>1){
                    return false;
                }
                if(method == 'POST' || method== 'PUT' ||method=='DELETE'){
                    return true;
                }
            }
            return false;
        };
        var httpInterceptor = {
            request: function(config) {
                if (isNeedAuth(config.url,config.method)) {
                    if(($cookies.get("token"))==undefined) {
                        return $q.reject(config);
                    }
                    config.headers['x-session-token'] = $cookies.get("token");
                }
                return config;
            },
            response : function(response) {
                return response;
            },
            responseError : function(response) {
                if (response.status == 401) {
                    alert('must login');
                    window.location.href = ssoUrl+window.location.href;
                    return $q.reject(response);
                } else if (response.status === 404) {
                    alert("404!");
                    return $q.reject(response);
                }
            },
            requestError : function(config){
                return $q.reject(config);
            }
        };
        return httpInterceptor;
    }
    ]);

angular.module('Show')
    .factory('Image', ['$resource',function($resource) {
        return $resource('/dockerapi/image/:action',{},{
            'save': { isArray: false, method: 'POST' },
            'edit': { isArray: false, method: 'POST' },
            'delete': { isArray: false, method: 'DELETE' },
            'star': {isArray:false,method:'POST'},
            'fork': {isArray:false,method:'POST'}
        });
    }])


angular.module('Show')
    .factory('Images', ['$resource',function($resource) {
        return $resource('/dockerapi/images/:id/:action', {id: '@id',action:'@action' }, {
            'query': { isArray: true, method: 'GET' },
            'get': { isArray: false, method: 'GET' }
        });
    }])

/**
 * Created by Administrator on 2015/5/20.
 */
angular.module('Show')
.factory('Info',['$resource',function($resource){
        return $resource('/api/user/info/:action/:uid',{},{
            'update':{isArray:false,method:'POST'},
            'get':{isArray:false,method:'GET'}
        })
    }])
/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Show')
    .factory('loginService',['User','$cookies','$window',function(User,$cookies,$window) {
        var verifyData = {
            App_id:null,
            App_key:null,
            Token:null
        }
        return {
            isLogin:function(){
                console.log('login service!')
                if(($cookies.token)==undefined) {
                    $window.location.href = "http://sso.peilong.me/html/baigoSSO/mypage/login.php?refer=http://image.peilong.me:9000";
                }
            },
            login:function(){
                verifyData.Token = $cookies.token;
                User.login({action:'islogin'},verifyData,function(c){
                    if(!c.is_login) {
                        $window.location.href = "http://sso.peilong.me/html/baigoSSO/mypage/login.php?refer=http://image.peilong.me:9000";
                    }
                },function(err){
                    $window.location.href = "http://sso.peilong.me/html/baigoSSO/mypage/login.php?refer=http://image.peilong.me:9000";
                });
            }
        }
}])
/**
 * Created by zpl on 15-3-18.
 */
angular.module('Show').
    factory('MyCodeService',['CodeAPIService','SessionService','$localStorage',function(CodeAPIService,SessionService,$localStorage){
        return {
            userid:null,
            mycode:null,
            setMyUserId : function(id){
                this.userid = id;
            },
            setMyCode : function(code){
                this.mycode = code;
            },
            checkUser : function(){
                if(this.userid == "" || this.userid == null){
                    var user = SessionService.getUserinfo();
                    this.userid = user.userid;
                }
            },
            getMyCodeFromBack : function(callback){
                this.checkUser();
              CodeAPIService.getCodesByUser(this.userid).
                  then(function(data){
                            if(data instanceof Array){
                                for (var i = data.length - 1; i >= 0; i--) {
                                    $localStorage.codes[data[i].id] = data[i]
                                };

                            }else{
                                $localStorage.codes[data.id] = data
                            }
                            callback(data);
                  },function(error){
                      this.mycode = null;
                      callback(null);
                  })
            },
            getMyOneCodeFromBack : function(codeid,callback){
                    if($localStorage.codes == undefined || $localStorage.codes == null ||$localStorage.codes[codeid] == null){
                        CodeAPIService.getCodeById(codeid).
                            then(function(data){
                                if($localStorage.codes == undefined || $localStorage.codes == null){
                                    $localStorage.codes ={};
                                }
                                $localStorage.codes[codeid] = data
                                callback(data);
                            },function(error){
                                console.log(error);
                                this.mycode = null;
                                callback(null);
                            })
                    }else{
                        callback($localStorage.codes[codeid])
                    }
            },
            getMyCodeFromCache : function(){
                return this.mycode;
            },
            getMyCode : function(callback){
                    this.getMyCodeFromBack(callback);
            },
            getCodeInfoById:function(codeid,callback){
                this.checkUser();
                this.getMyOneCodeFromBack(codeid,callback);
            },
            getMyCodeOneStep:function(codeid,stepid,callback){
                CodeAPIService.getCodeStepById(codeid,stepid).
                    then(function(data){
                        callback(data);
                    },function(error){
                        console.log(error);
                        callback(null);
                    })
            },
            getMyCodeStep: function(codeid,callback){
                CodeAPIService.getCodeSteps(codeid).
                    then(function(data){
                        this.mycode = data;
                        $localStorage.codes[codeid].steps = data
                        callback(this.mycode);
                    },function(error){
                        console.log(error);
                        this.mycode = null;
                        callback(null);
                    });
            },
            getMyCodeAllInfo: function(codeid,stepid,callback){
                CodeAPIService.getCodeStepDetail(codeid,stepid).
                    then(function(data){
                        callback(data);
                    },function(error){
                        console.log(error);
                        callback(null);
                    });
            },
            addMyCodeStep: function(codeid,codestep,callback){
                this.checkUser();
                if(typeof codestep.image_id == 'string'){
                    codestep.image_id = parseInt(codestep.image_id)
                }
                if(codestep.id != null && codestep.id != ""){
                    CodeAPIService.updateCodeStep(this.userid,codeid,codestep.id,codestep).
                        then(function(data){
                            callback(data);
                        },function(error){
                            console.log(error);
                            callback(null);
                        });
                }else{
                    codestep.id = null;
                    CodeAPIService.addCodeStep(this.userid,codeid,codestep).
                        then(function(data){
                            callback(data);
                        },function(error){
                            console.log(error);
                            callback(null);
                        });
                }

            },
            addMyCodeStepCmd: function(codeid,stepid,data,callback){
                this.checkUser();
                CodeAPIService.updateCodeStepCmd(this.userid,codeid,stepid,data).
                    then(function(d){
                        callback(d);
                    },function(error){
                        console.log(error);
                        callback(null);
                    })
            },
            addMyContentStep: function(codeid,stepid,data,callback){
                this.checkUser();
                CodeAPIService.updateCodeStepDetail(this.userid,codeid,stepid,data).
                    then(function(d){
                        callback(d);
                    },function(error){
                        console.log(error);
                        callback(null);
                    })
            },
            addCode2User:function(obj,cb){
                this.checkUser();
                if(obj &&obj.id == undefined){
                    CodeAPIService.addCode2User(this.userid,obj).then(function(data){
                        cb(data);
                    },function(error){
                        cb(error);
                    })
                }  else{
                    CodeAPIService.updateCode(this.userid,obj).then(function(data){
                        cb(data);
                    },function(error){
                        cb(error);
                    })
                }

            },
            runCode:function(image,obj,cb){
                CodeAPIService.coderun(image,obj).then(function(data){
                    cb(null,data);
                },function(error){
                    cb(error,null)
                })
            },
            queryRunRes:function(id,cb){
                CodeAPIService.coderunRes(id).then(function(data){
                    cb(null,data)
                },function(err){
                    cb(err,null)
                })
            },
            updateCodeStar:function(userid,codeid,cb){
                CodeAPIService.updateCodeStar(userid,codeid).then(function(data){
                    $localStorage.codes[codeid].star = data.star;
                    cb(null,data)
                },function(err){
                    cb(err,null)
                })
            },
            getHotCodes:function(page,num,key,cb){
                CodeAPIService.getHotCodes(page,num,key).then(function(data){
                    cb(null,data)
                },function(err){
                    cb(err,null)
                })
            }
        }
    }])
/**
 * Created by zpl on 15-6-1.
 * http://7xj4fk.com1.z0.glb.clouddn.com/FpvJ2udpgKgf5D8sne5Ia5DosbHo?imageView2/1/w/200/h/100
 */

angular.module('Show')
    .factory('PictureService', [function(){
        return {
            ConvertKey2Src:function(key,h,w){
                if (key == "" || key==undefined){
                    key = "default.jpg"
                }
                return "http://7xj4fk.com1.z0.glb.clouddn.com/"+key+"?imageView2/1/"+"w/"+w+"/h/"+h;
            }
        }
    }])
/**
 * Created by zpl on 15-3-22.
 * http发射器
 */

angular.module('Show').
    factory('RestfulService',['$http','$q',function($http,$q){
        return {
            restfulOp:function(config){
                return $http(
                    config
                ).then(function(response) {
                        console.log(response);
                        if(typeof response != 'object'){
                            return $q.reject({error:"server error"});
                        }
                        if (typeof response.data === 'object') {
                            var data = response.data;
                            if (data == null ||data.hasOwnProperty("code")) {
                                return $q.reject(response.data);
                            } else {
                                // invalid response
                                return response.data;
                            }
                        } else {
                            // invalid response
                            return $q.reject(response.data);
                        }

                    }, function(response) {
                        // something went wrong
                        return $q.reject(response.data);
                    });
            }
        }
    }
    ]);

/**
 * Created by zpl on 15-3-22.
 * 专门存储token
 */
angular.module('Show').
    factory('SessionService',['$localStorage','$cookies','User','$window', function($localStorage,$cookies,User,$window){
        return {
            getUserinfo: function(){
                this.login()
                var user ={
                    userid: $cookies.get("u_id"),
                    name:$cookies.get("u_name"),
                    avatar:$cookies.get("u_avatar")
                }
                //if(user == null){
                //    //TODO need login,mock login
                //    user = $localStorage.user;
                //}
                return user;
            },
            isLogin:function(){
                //if($localStorage.token)
                //    return true;
                //return false;
                if(($cookies.get("token"))==undefined) {
                    return false;
                }
                return true;
            },
            getToken:function(){
                var token = $cookies.get("token");
                if(token == null){
                    //TODO need login,mock login
                    this.login();
                    token = $cookies.get("token");
                }
                return token;
            },
            login:function(){

                if(($cookies.get("token"))==undefined) {
                    alert('请先登陆')
                    $window.location.href = ssoUrl+window.location.href;
                }
            },
            logout:function(){
                $cookies.remove('token',{
                    domain:'.learn4me.com'
                });
                $cookies.remove('u_id',{
                    domain:'.learn4me.com'
                });
                $window.location.href = "/";
            }
        }
    }]);

angular.module('Show')
   .factory('Star', ['$resource',function($resource){
        return $resource('/dockerapi/star/:uid/:id',{uid:'@uid',id:'@id'},{
            'query':{isArray:false,method:'GET'}
        })
    }])

/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Show')
.factory('User', ['$resource',function($resource) {
        return $resource('/api/sso/:action',{},{
            'login':{isArray:false,method:'POST'},
            'logout':{isArray:false,method:'POST'}
        })
    }])