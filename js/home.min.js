angular.module('Home', ['ui.router', 'ngCookies','ngStorage','permission','ngResource']);
var apiService = "http://api.learn4me.com";
var baseUrl = "/api";
var rootUrl = window.location.href
var ssoUrl = "http://sso.learn4me.com/login.php?refer=";

'use strict';

/**
 * Route configuration for the RDash module.
 */
angular.module('Home').config(['$httpProvider','$stateProvider', '$urlRouterProvider',
    function($httpProvider,$stateProvider, $urlRouterProvider) {

        $httpProvider.defaults.timeout = 5000;
        //interceptors
        $httpProvider.interceptors.push('httpInterceptor');

        ////set rest
        //RestangularProvider.setBaseUrl('http://localhost:8001/api')

        // For unmatched routes
        $urlRouterProvider.otherwise('/');

        // Application routes
        $stateProvider
            .state('index', {
                url: '/',
                templateUrl: 'templates/index_codehub.html'
            })
    }
]);
/**
 * Created by zpl on 15-3-23.
 */
'use strict';

/**
 * Route run for the RDash module.
 */
angular.module('Home').run(function(Permission,SessionService){
    // Define anonymous role
    Permission.defineRole('anonymous', function (stateParams) {
        // If the returned value is *truthy* then the user has the role, otherwise they don't
        if (!SessionService.isLogin()) {
            return true; // Is anonymous
        }
        return false;
    });
})
;
/**
 * Created by zpl on 15-2-2.
 * code hub
 */

angular
    .module('Home')
    .controller('MyCodeHubCtrl', ['$scope','MyCodeService', MyCodeHubCtrl]);

function MyCodeHubCtrl($scope,MyCodeService) {
    $scope.flag = {};
    $scope.pagination =new Array()
    $scope.page = {
        total:0,
        page:1,
        num:8
    };
    $scope.flag.key= "";

    //func
    $scope.flag.search = function(){
        $scope.currentData(1);
    }
    $scope.currentData = function(index){
        if(index <1)
            return;
        $scope.page.page = index;
        $scope.flag.is_show = true;
        $scope.flag.msg = "正在加载。。。";
        MyCodeService.getHotCodes($scope.page.page,$scope.page.num,$scope.flag.key,function(err,data){
            if(data){
                if(data.length == 0){
                    $scope.flag.msg = "暂时没有数据。。您可以创建";
                }else{
                    $scope.codedata = data.list;
                    $scope.page.total = data.total;
                    $scope.page.page = data.page;
                    $scope.page.num = data.num;
                    $scope.pagination =new Array()
                    for(var i =1;i<=(data.total/data.num)+1;i++){
                        var page = {
                            is_active:(data.page==i?true:false),
                            index :i
                        }
                        $scope.pagination.push(page);
                    }
                    $scope.flag.is_show = false;
                }
            }else{
                $scope.flag.msg = "加载失败。。。！";
            }
        });
    }

    //init
    $scope.currentData(1,"");
}

/**
 * Created by zpl on 15-5-19.
 */
HeaderCtrl

angular
    .module('Home')
    .controller('HeaderCtrl', ['PictureService','$scope','SessionService', HeaderCtrl]);

function HeaderCtrl(PictureService,$scope,SessionService){

    $scope.flag = {}
    $scope.flag.loged = false;
    if(SessionService.isLogin()== true) {
        $scope.flag.loged = true;
        $scope.user = SessionService.getUserinfo();
        $scope.user_avatar = PictureService.ConvertKey2Src($scope.user.avatar,40,40);
    }

}
/**
 * Created by zpl on 15-2-2.
 * image hub
 */


angular
    .module('Home')
    .controller('MyImageHubCtrl', ['$scope', '$resource','Images', MyImageHubCtrl]);

function MyImageHubCtrl($scope,$resource,Images) {
    //var myimagelist = $resource('/api/images/json?all=0', {}, {}).query();
    //var myimagelist = [
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':1,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //    {
    //        'imageid':2,
    //        'imagename':'go语言测试',
    //        'description':'描述镜像内容',
    //        'status':2,
    //        'stars':40,
    //        'date':'9月20日',
    //        'forknum':50
    //    },
    //];
    Images.query({}).$promise.then(function(data){
        $scope.imagedata = data;
        $scope.imagenum = $scope.imagedata.length;
        //for (var i=0;i<$scope.imagedata.length;i++ ) {
        //    $scope.forknum += $scope.imagedata[i].Fork;
        //}
    });
    //$scope.imagedata = myimagelist;
}


/**
 * Created by Administrator on 2015/4/29.
 */
angular.module('Home')
    .directive('ngEnter', function ($timeout) {
        return function(scope, element, attrs) {
            element.bind("keydown keypress", function (event) {
                if(event.which === 13) {
                    //scope.$apply(function (){
                    //    scope.$eval(attrs.ngEnter);
                    //});
                    $timeout(function() {
                        // We must reevaluate the value in case it was changed by a subsequent
                        // watch handler in the digest.
                        scope.$eval(attrs.ngEnter);
                    }, 0, false);
                    event.preventDefault();
                }
            });
        };
    });
/**
 * Loading Directive
 * @see http://tobiasahlin.com/spinkit/
 */

angular
    .module('Home')
    .directive('rdLoading', rdLoading);

function rdLoading() {
    var directive = {
        restrict: 'AE',
        template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
    };
    return directive;
};
/**
 * Created by zpl on 15-4-9.
 */
angular
    .module('Home')
    .directive('steps', ['$compile',stepByStep]);
function stepByStep($compile){
    return {
        restrict : 'A',
        //compile: function (tEl) {
        //    return function(scope, element, attrs) {
        //        //var stepsEl;
        //        //
        //        //element.wrapInner('<div class="steps-wrapper">');
        //        //element.children('.steps-wrapper').append(tEl.context.innerHTML);
        //        //var content = $compile(element.contents())(scope);
        //        //$timeout(function () {
        //        //    element.children('.steps-wrapper').steps(scope.stepconfig);
        //        //})
        //        element.wrapInner('<div class="steps-wrapper">')
        //        var steps = element.children('.steps-wrapper').steps(scope.stepconfig);
        //
        //        scope.form = $compile(steps)(scope)
        //    }
        //},
        link : function(scope, element, attrs) {
            element.wrapInner('<div class="steps-wrapper">')
            var steps = element.children('.steps-wrapper').steps(scope.stepconfig);

            scope.form = $compile(steps)(scope)

        }
    }
}
/**
 * Widget Body Directive
 */

angular
    .module('Home')
    .directive('rdWidgetBody', rdWidgetBody);

function rdWidgetBody() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            loading: '@?',
            classes: '@?'
        },
        transclude: true,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Footer Directive
 */

angular
    .module('Home')
    .directive('rdWidgetFooter', rdWidgetFooter);

function rdWidgetFooter() {
    var directive = {
        requires: '^rdWidget',
        transclude: true,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Header Directive
 */

angular
    .module('Home')
    .directive('rdWidgetHeader', rdWidgetTitle);

function rdWidgetTitle() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            title: '@',
            icon: '@'
        },
        transclude: true,
        template: '<div class="widget-header"><i class="fa" ng-class="icon"></i> {{title}} <div class="pull-right" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Directive
 */

angular
    .module('Home')
    .directive('rdWidget', rdWidget);

function rdWidget() {
    var directive = {
        transclude: true,
        template: '<div class="widget" ng-transclude></div>',
        restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
        /* */
    }
};
/**
 * Created by zpl on 15-3-16.
 */
angular.module('Home').
    factory('CodeAPIService',['$http','$q','RestfulService',function($http,$q,RestfulService){
        return {
            getCodesByUser: function(userid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/user/code/"+userid,
                    method:"GET"
                });
            },
            getCodeById: function(id){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+id,
                    method:"GET"
                });
            },
            addCode2User: function(userid,codeinfo){
                return RestfulService.restfulOp({
                    url:baseUrl+"/user/code/"+userid,
                    method:"POST",
                    data:codeinfo
                });

            },
            updateCode:function(userid,codeinfo){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeinfo.id,
                    method:"PUT",
                    data:codeinfo
                });

            },
            deleteCode:function(userid,codeid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid,
                    method:"DELETE"
                });

            },
            getCodeSteps:function(codeid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+codeid+"/step",
                    method:"GET"
                });
            },
            getCodeStepById: function(codeid,stepid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+codeid+"/step/"+stepid,
                    method:"GET"
                });

            },
            addCodeStep: function(userid,codeid,codestep){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step",
                    method:"POST",
                    data:codestep
                });

            },
            updateCodeStepCmd: function(userid,codeid,stepid,data){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step/"+stepid+"/cmd",
                    method:"PUT",
                    data:data
                })
            },
            updateCodeStep: function(userid,codeid,stepid,codestep){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step/"+stepid,
                    method:"PUT",
                    data:codestep
                });

            },
            deleteCodeStep: function(userid,codeid,stepid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step/"+stepid,
                    method:"DELETE"
                });

            },
            getCodeStepDetail: function(codeid,stepid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+codeid+"/step/"+stepid+"/detail",
                    method:"GET"
                });
            },
            updateCodeStepDetail: function(userid,codeid,stepid,codestepdetail){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/step/"+stepid+"/detail",
                    method:"PUT",
                    data:codestepdetail
                });

            },
            coderun: function(imageid,runinfo){
                return RestfulService.restfulOp({
                    url:baseUrl+"/coderun/"+imageid,
                    method:"PUT",
                    data:runinfo
                });

            },
            coderunRes: function(runid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/coderun/"+runid,
                    method:"GET"
                });

            },
            updateCodeStar: function(userid,codeid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/star/"+userid+"/"+codeid,
                    method:"PUT",
                    data:{userid:userid,codeid:codeid}
                });
            },
            getHotCodes: function(page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/code?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            getCodeIssues: function(codeid,page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+codeid+"/issues?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            addCodeIssue: function(userid,codeid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/issue",
                    method:"POST",
                    data:obj
                });
            },
            updateCodeIssue: function(userid,codeid,issueid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/issue/"+issueid,
                    method:"PUT",
                    data:obj
                });
            },
            deleteCodeIssue: function(userid,codeid,issueid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/code/"+userid+"/"+codeid+"/issue/"+issueid,
                    method:"DELETE"
                });
            },
            getIssuesComments: function(issueid,page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/issue/"+issueid+"/comments?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            addCodeIssueComment: function(userid,issueid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/issue/"+userid+"/"+issueid+"/comment",
                    method:"POST",
                    data:obj
                });
            },
            updateCodeIssueComment: function(userid,issueid,commentid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/issue/"+userid+"/"+issueid+"/comment/"+commentid,
                    method:"PUT",
                    data:obj
                });
            },
            deleteCodeIssueComment: function(userid,issueid,commentid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/issue/"+userid+"/"+issueid+"/comment/"+commentid,
                    method:"DELETE"
                });
            },
            getImageIssues: function(imageid,page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/"+imageid+"/issues?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            addImageIssue: function(userid,imageid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/"+userid+"/"+imageid+"/issue",
                    method:"POST",
                    data:obj
                });
            },
            updateImageIssue: function(userid,imageid,issueid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/"+userid+"/"+imageid+"/issue/"+issueid,
                    method:"PUT",
                    data:obj
                });
            },
            deleteImageIssue: function(userid,imageid,issueid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/"+userid+"/"+imageid+"/issue/"+issueid,
                    method:"DELETE"
                });
            },
            getImageIssuesComments: function(issueid,page,num,key){
                if(page == undefined || page == null){
                    page = 1;
                }
                if(num == undefined || num == null){
                    num = 5;
                }
                if(key == undefined || key == null){
                    key = "";
                }
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/issue/"+issueid+"/comments?page="+page+"&num="+num+"&key="+key,
                    method:"GET"
                });
            },
            addImageIssueComment: function(userid,issueid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/issue/"+userid+"/"+issueid+"/comment",
                    method:"POST",
                    data:obj
                });
            },
            updateImageIssueComment: function(userid,issueid,commentid,obj){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/issue/"+userid+"/"+issueid+"/comment/"+commentid,
                    method:"PUT",
                    data:obj
                });
            },
            deleteImageIssueComment: function(userid,issueid,commentid){
                return RestfulService.restfulOp({
                    url:baseUrl+"/image/issue/"+userid+"/"+issueid+"/comment/"+commentid,
                    method:"DELETE"
                });
            }

        }
    }])
/**
 * Created by zpl on 15-3-22.
 * 拦截器
 */
angular.module('Home').
    factory('httpInterceptor',['$q','$cookies', function($q,$cookies){
        var isNeedAuth=function(uri,method){
            //check url is contain api
            if(uri.indexOf('api')>0){
                if(method == 'POST' || method== 'PUT' ||method=='DELETE'){
                    return true;
                }
            }
            return false;
        };
        var httpInterceptor = {
            request: function(config) {
                if(config.url.indexOf('api')>0){
                    config.url =apiService + config.url;
                }
                if (isNeedAuth(config.url,config.method)) {
                    if(($cookies.get("token"))==undefined) {
                        return $q.reject(config);
                    }
                    config.headers['x-session-token'] = $cookies.get("token");
                }
                return config;
            },
            response : function(response) {
                return response;
            },
            responseError : function(response) {
                if (response.status == 401) {
                    alert('must login');
                    window.location.href = ssoUrl+window.location.href;
                    return $q.reject(response);
                } else if (response.status === 404) {
                    alert("404!");
                    return $q.reject(response);
                }
            },
            requestError : function(config){
                return $q.reject(config);
            }
        };
        return httpInterceptor;
    }
    ]);

angular.module('Home')
    .factory('Image', ['$resource',function($resource) {
        return $resource('/api/image/:action',{},{
            'save': { isArray: false, method: 'POST' },
            'edit': { isArray: false, method: 'POST' },
            'delete': { isArray: false, method: 'DELETE' },
            'star': {isArray:false,method:'POST'},
            'fork': {isArray:false,method:'POST'}
        });
    }])


angular.module('Home')
    .factory('Images', ['$resource',function($resource) {
        return $resource('/api/images/:id/:action', {id: '@id',action:'@action' }, {
            'query': { isArray: true, method: 'GET' },
            'get': { isArray: false, method: 'GET' }
        });
    }])

/**
 * Created by Administrator on 2015/5/20.
 */
angular.module('Home')
.factory('Info',['$resource',function($resource){
        return $resource('/api/user/info/:action/:uid',{},{
            'update':{isArray:false,method:'POST'},
            'get':{isArray:false,method:'GET'}
        })
    }])
/**
 * Created by zpl on 15-3-18.
 */
angular.module('Home').
    factory('MyCodeService',['CodeAPIService','SessionService','$localStorage',function(CodeAPIService,SessionService,$localStorage){
        return {
            userid:null,
            mycode:null,
            setMyUserId : function(id){
                this.userid = id;
            },
            setMyCode : function(code){
                this.mycode = code;
            },
            checkUser : function(){
                if(this.userid == "" || this.userid == null){
                    var user = SessionService.getUserinfo();
                    this.userid = user.userid;
                }
            },
            getMyCodeFromBack : function(callback){
                this.checkUser();
              CodeAPIService.getCodesByUser(this.userid).
                  then(function(data){
                            if(data instanceof Array){
                                for (var i = data.length - 1; i >= 0; i--) {
                                    $localStorage.codes[data[i].id] = data[i]
                                };

                            }else{
                                $localStorage.codes[data.id] = data
                            }
                            callback(data);
                  },function(error){
                      this.mycode = null;
                      callback(null);
                  })
            },
            getMyOneCodeFromBack : function(codeid,callback){
                    if($localStorage.codes == undefined || $localStorage.codes == null ||$localStorage.codes[codeid] == null){
                        CodeAPIService.getCodeById(codeid).
                            then(function(data){
                                if($localStorage.codes == undefined || $localStorage.codes == null){
                                    $localStorage.codes ={};
                                }
                                $localStorage.codes[codeid] = data
                                callback(data);
                            },function(error){
                                console.log(error);
                                this.mycode = null;
                                callback(null);
                            })
                    }else{
                        callback($localStorage.codes[codeid])
                    }
            },
            getMyCodeFromCache : function(){
                return this.mycode;
            },
            getMyCode : function(callback){
                    this.getMyCodeFromBack(callback);
            },
            getCodeInfoById:function(codeid,callback){
                this.checkUser();
                this.getMyOneCodeFromBack(codeid,callback);
            },
            getMyCodeOneStep:function(codeid,stepid,callback){
                CodeAPIService.getCodeStepById(codeid,stepid).
                    then(function(data){
                        callback(data);
                    },function(error){
                        console.log(error);
                        callback(null);
                    })
            },
            getMyCodeStep: function(codeid,callback){
                CodeAPIService.getCodeSteps(codeid).
                    then(function(data){
                        this.mycode = data;
                        $localStorage.codes[codeid].steps = data
                        callback(this.mycode);
                    },function(error){
                        console.log(error);
                        this.mycode = null;
                        callback(null);
                    });
            },
            getMyCodeAllInfo: function(codeid,stepid,callback){
                CodeAPIService.getCodeStepDetail(codeid,stepid).
                    then(function(data){
                        callback(data);
                    },function(error){
                        console.log(error);
                        callback(null);
                    });
            },
            addMyCodeStep: function(codeid,codestep,callback){
                this.checkUser();
                if(typeof codestep.image_id == 'string'){
                    codestep.image_id = parseInt(codestep.image_id)
                }
                if(codestep.id != null && codestep.id != ""){
                    CodeAPIService.updateCodeStep(this.userid,codeid,codestep.id,codestep).
                        then(function(data){
                            callback(data);
                        },function(error){
                            console.log(error);
                            callback(null);
                        });
                }else{
                    codestep.id = null;
                    CodeAPIService.addCodeStep(this.userid,codeid,codestep).
                        then(function(data){
                            callback(data);
                        },function(error){
                            console.log(error);
                            callback(null);
                        });
                }

            },
            addMyCodeStepCmd: function(codeid,stepid,data,callback){
                this.checkUser();
                CodeAPIService.updateCodeStepCmd(this.userid,codeid,stepid,data).
                    then(function(d){
                        callback(d);
                    },function(error){
                        console.log(error);
                        callback(null);
                    })
            },
            addMyContentStep: function(codeid,stepid,data,callback){
                this.checkUser();
                CodeAPIService.updateCodeStepDetail(this.userid,codeid,stepid,data).
                    then(function(d){
                        callback(d);
                    },function(error){
                        console.log(error);
                        callback(null);
                    })
            },
            addCode2User:function(obj,cb){
                this.checkUser();
                if(obj &&obj.id == undefined){
                    CodeAPIService.addCode2User(this.userid,obj).then(function(data){
                        cb(data);
                    },function(error){
                        cb(error);
                    })
                }  else{
                    CodeAPIService.updateCode(this.userid,obj).then(function(data){
                        cb(data);
                    },function(error){
                        cb(error);
                    })
                }

            },
            runCode:function(image,obj,cb){
                CodeAPIService.coderun(image,obj).then(function(data){
                    cb(null,data);
                },function(error){
                    cb(error,null)
                })
            },
            queryRunRes:function(id,cb){
                CodeAPIService.coderunRes(id).then(function(data){
                    cb(null,data)
                },function(err){
                    cb(err,null)
                })
            },
            updateCodeStar:function(userid,codeid,cb){
                CodeAPIService.updateCodeStar(userid,codeid).then(function(data){
                    $localStorage.codes[codeid].star = data.star;
                    cb(null,data)
                },function(err){
                    cb(err,null)
                })
            },
            getHotCodes:function(page,num,key,cb){
                CodeAPIService.getHotCodes(page,num,key).then(function(data){
                    cb(null,data)
                },function(err){
                    cb(err,null)
                })
            }
        }
    }])
/**
 * Created by zpl on 15-6-1.
 * http://7xj4fk.com1.z0.glb.clouddn.com/FpvJ2udpgKgf5D8sne5Ia5DosbHo?imageView2/1/w/200/h/100
 */

angular.module('Home')
    .factory('PictureService', [function(){
        return {
            ConvertKey2Src:function(key,h,w){
                if (key == "" || key==undefined){
                    key = "default.jpg"
                }
                return "http://7xj4fk.com1.z0.glb.clouddn.com/"+key+"?imageView2/1/"+"w/"+w+"/h/"+h;
            }
        }
    }])
/**
 * Created by zpl on 15-3-22.
 * http发射器
 */

angular.module('Home').
    factory('RestfulService',['$http','$q',function($http,$q){
        return {
            restfulOp:function(config){
                return $http(
                    config
                ).then(function(response) {
                        console.log(response);
                        if(typeof response != 'object'){
                            return $q.reject({error:"server error"});
                        }
                        if (typeof response.data === 'object') {
                            var data = response.data;
                            if (data == null ||data.hasOwnProperty("code")) {
                                return $q.reject(response.data);
                            } else {
                                // invalid response
                                return response.data;
                            }
                        } else {
                            // invalid response
                            return $q.reject(response.data);
                        }

                    }, function(response) {
                        // something went wrong
                        return $q.reject(response.data);
                    });
            }
        }
    }
    ]);

/**
 * Created by zpl on 15-3-22.
 * 专门存储token
 */
angular.module('Home').
    factory('SessionService',['$localStorage','$cookies','User','$window', function($localStorage,$cookies,User,$window){
        return {
            getUserinfo: function(){
                this.login()
                var user ={
                    userid: $cookies.get("u_id"),
                    name:$cookies.get("u_name"),
                    avatar:$cookies.get("u_avatar")
                }
                //if(user == null){
                //    //TODO need login,mock login
                //    user = $localStorage.user;
                //}
                return user;
            },
            isLogin:function(){
                //if($localStorage.token)
                //    return true;
                //return false;
                if(($cookies.get("token"))==undefined) {
                    return false;
                }
                return true;
            },
            getToken:function(){
                var token = $cookies.get("token");
                if(token == null){
                    //TODO need login,mock login
                    this.login();
                    token = $cookies.get("token");
                }
                return token;
            },
            login:function(){

                if(($cookies.get("token"))==undefined) {
                    alert('请先登陆')
                    $window.location.href = ssoUrl+window.location.href;
                }
            },
            logout:function(){
                $cookies.remove('token',{
                    domain:'.learn4me.com'
                });
                $cookies.remove('u_id',{
                    domain:'.learn4me.com'
                });
                $window.location.href = "/";
            }
        }
    }]);

/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Home')
.factory('User', ['$resource',function($resource) {
        return $resource('/api/sso/:action',{},{
            'login':{isArray:false,method:'POST'},
            'logout':{isArray:false,method:'POST'}
        })
    }])