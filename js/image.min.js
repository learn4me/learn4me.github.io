/**
 * Created by zpl on 15-2-2.
 */
angular.module('Image', ['angularTreeview','ui.bootstrap', 'ui.router', 'ngCookies','ngResource','permission','ngDialog']);
var ssoUrl = "http://sso.learn4me.com/login.php?refer=";
var apiService = "http://api.learn4me.com";
var baseUrl = "/api";
/**
 * Created by zpl on 15-2-2.
 */
'use strict';

/**
 * Route configuration for the RDash module.
 */
angular.module('Image').config(['$stateProvider', '$urlRouterProvider','$httpProvider',
    function($stateProvider, $urlRouterProvider,$httpProvider) {

        $httpProvider.defaults.timeout = 5000;
        //interceptors
        $httpProvider.interceptors.push('httpInterceptor');
        //For unmatched routes
        $urlRouterProvider.otherwise('/');

        // Application routes
        $stateProvider
            .state('login',{
                templateUrl: function (){
                    //TODO mock login
                    window.location.href =ssoUrl+window.location.href;
                }
            })
            .state('index', {
                url: '/',
                templateUrl: 'templates/image.html',
                data: {
                    permissions: {
                        except: ['anonymous'],
                        redirectTo: 'login'
                    }
                }
            })
            .state('edit', {
                url: '/edit/:id',
                templateUrl: 'templates/edit.html',
                controller:'EditCtrl',
                data: {
                    permissions: {
                        except: ['anonymous'],
                        redirectTo: 'login'
                    }
                }
            })
            .state('term', {
                url:'/term/:base',
                templateUrl:'templates/terminal.html',
                controller:'TerminalCtrl',
                data: {
                    permissions: {
                        except: ['anonymous'],
                        redirectTo: 'login'
                    }
                }
            });
    }
]);

/**
 * Created by zpl on 15-3-23.
 */
'use strict';

/**
 * Route run for the RDash module.
 */
angular.module('Image').run(['Permission','$cookies',function(Permission,$cookies){
    // Define anonymous role
    Permission.defineRole('anonymous', function () {
        // If the returned value is *truthy* then the user has the role, otherwise they don't
        if(($cookies.get("token"))==undefined) {
            return true;
        }
        return false;
    });
}])
;
/**
 * Created by Administrator on 2015/3/18.
 */
angular.module('Image')
    .controller('EditCtrl', ['SessionService','$scope', '$cookieStore','$stateParams','Images', 'Image', '$location', 'sharedProperties','$cookies','loginService', EditCtrl]);

function EditCtrl(SessionService,$scope,$cookieStore,$stateParams,Images,Image,$location,sharedProperties,$cookies,loginService) {
    /**
     * Sidebar Toggle & Cookie Control
     */
    $scope.flag = {}
    $scope.flag.loged = false;
    if(SessionService.isLogin()== true) {
        $scope.flag.loged = true;
        $scope.user = SessionService.getUserinfo();
    }

    //loginService.login();
    $scope.user = SessionService.getUserinfo();
    var currentid = parseInt($cookies.get("u_id"));
    $scope.treedata = [];
    Images.query({id: currentid, action: 'list'}).$promise.then(function (data) {
        var treedata = data;
        for (var i = 0; i < treedata.length; i++) {
            $scope.treedata.push({
                "label": treedata[i].ImageName,
                "id": treedata[i].ImageId,
                "children": []
            })
        }
    });
    Images.get({id: $stateParams.id, action: 'log'}).$promise.then(function (data) {
        $scope.basic = data;
    });
    $scope.processEdit = function () {
        //alert($scope.basic.Descrip);
        //alert($scope.basic.Fork)
        sharedProperties.editImages($scope.basic);
        $location.path("/term/"+ $scope.basic.ImageName);
        //Image.edit({action:'edit'},$scope.basic).$promise.then(function(c){
        //    $location.path("/term/"+ $scope.basic.ImageName+"/"+$scope.basic.Tag);
        //}, function(err){
        //    //$scope.hideLoader();
        //    //$scope.error = err.data;
        //    alert("failure");
        //    return false;
        //});
    }
}
/**
 * Created by zpl on 15-5-19.
 */
HeaderCtrl

angular
    .module('Image')
    .controller('HeaderCtrl', ['PictureService','$scope','SessionService', HeaderCtrl]);

function HeaderCtrl(PictureService,$scope,SessionService){

    $scope.flag = {}
    $scope.flag.loged = false;
    if(SessionService.isLogin()== true) {
        $scope.flag.loged = true;
        $scope.user = SessionService.getUserinfo();
        $scope.user_avatar = PictureService.ConvertKey2Src($scope.user.avatar,40,40);

    }

}
/**
 * Created by ZJY on 15-2-4.
 */
angular.module('Image')
    .controller('ImageCtrl', ['SessionService','$scope', '$cookies','$stateParams','Images','Image', '$location','sharedProperties','loginService','$window', ImageCtrl]);

function ImageCtrl(SessionService,$scope,$cookies,$stateParams,Images,Image,$location,sharedProperties,loginService,$window) {
    /**
     * Sidebar Toggle & Cookie Control
     */
    //var codeid = $stateParams.codeid;
    //console.log('codeid:'+codeid);
    //mock data
    //loginService.isLogin();
    $scope.flag = {}
    $scope.flag.loged = false;
    if(SessionService.isLogin()== true) {
        $scope.flag.loged = true;
        $scope.user = SessionService.getUserinfo();
    }

    //loginService.login();
    $scope.user = SessionService.getUserinfo();
    var adminid = 1;
    var currentid = parseInt($cookies.get("u_id"));
    var username = $cookies.get("u_name");
    $scope.username = username;
    $scope.treedata = [];
    Images.query({id: currentid, action: 'list'}).$promise.then(function(data){
        var treedata = data;
        for (var i=0;i<treedata.length;i++ ) {
            $scope.treedata.push({
                "label": treedata[i].ImageName,
                "id": treedata[i].ImageId,
                "children": []
            })
        }
    });
    $scope.formData = {};
    //$scope.treedata =
    //    [
    //        { "label" : "c++", "id" : "role1", "children" : [] },
    //        { "label" : "python", "id" : "role2", "children" : [] },
    //        { "label" : "golang", "id" : "role3", "children" : [] }
    //    ];
    Images.query({id: adminid, action: 'list'}).$promise.then(function(data){
        $scope.basics = data;
        $scope.formData.bm = $scope.basics[0];
        //$scope.bm = $scope.basics[0].ImageName;
        //alert( $scope.basics[0].ImageName);
    });
    //var test = $resource('/api/images/:id/:action', {id: '@id',action:'list' }, {});
    //var params;
    //$scope.basics = test.query({id:1}, function() {
    //    params = $scope.basics;
    //});
    //$scope.sBasic = 'ubuntu';
    //if ($stateParams.id == undefined) {
    //    alert('ok');
    //};
    $scope.processForm = function() {
        //alert($scope.basics[0].ImageName);
        //var a = $resource('/api/images/star', {}, {'save': { isArray: false, method: 'POST' }});
        //a.save({id: 1, uid: 1}, params).$promise.then(function(c){
        //}, function(err){
        //});
        var newimage = {
            UserId:currentid,
            ImageName:username + "-" + $scope.formData.imageName,
            BaseImage:$scope.formData.bm.ImageName,
            Tag:1,
            Descrip:$scope.formData.description
        };
        console.log($scope.formData.bm)
        sharedProperties.createImages(newimage,$scope.formData.bm.Tag);
        //alert($scope.formData.imageName);
        //alert($scope.formData.description);
        //var c.Bimage = "ubuntu";
        Image.save({action:'create',userid:currentid},newimage).$promise.then(function(c){
            //$location.path("/");
            //var c={Bimage:"ubuntu"};
            $location.path("/term/"+ c.Bimage);
            //alert(c.Bimage);
        }, function(err){
            //$scope.hideLoader();
            //$scope.error = err.data;
            alert("failure");
            return false;
        });
    }
}

/**
 * Created by Administrator on 2015/3/26.
 */
angular.module('Image')
    .controller('TerminalCtrl', ['SessionService','$scope', '$cookies','$stateParams', '$location','sharedProperties','Image','$window','ngDialog','loginService', TerminalCtrl]);


function TerminalCtrl(SessionService,$scope,$cookies,$stateParams,$location,sharedProperties,Image,$window,ngDialog,loginService) {
    $scope.flag = {}
    $scope.flag.loged = false;
    if(SessionService.isLogin()== true) {
        $scope.flag.loged = true;
        $scope.user = SessionService.getUserinfo();
    }

    //$scope.apiUrl = "http://127.0.0.1:8080/user/";
    //loginService.login();
    $scope.user = SessionService.getUserinfo();
    $scope.apiUrl = "http://proxy.learn4me.com:9002/user/";
    //alert($scope.apiUrl);
    $scope.uid = parseInt($cookies.get("u_id"));
    $scope.baseimage = $stateParams.base;
    if(sharedProperties.isEdit()) {
        var image = sharedProperties.getImage();
        $scope.tag = image.Tag;
    } else if(sharedProperties.isCreate()) {
        console.log(sharedProperties.getDepTag());
        $scope.tag = sharedProperties.getDepTag();
    } else {
        return;
    }
    $scope.commit = function() {
        var image = {};
        document.getElementById("console").style.display="none";
        document.getElementById("loading").style.display="block";
        //var dialog = ngDialog.open({template:'templates/dialog/loading.html'});
        if(sharedProperties.isEdit()) {
            image = sharedProperties.getImage();
            image.Tag += 1;
            Image.edit({action:'edit',userid:$scope.user.userid},image).$promise.then(function(c){
                //$location.path("/term/"+ image.ImageName+"/"+image.basic.Tag);
            }, function(err){
                //$scope.hideLoader();
                //$scope.error = err.data;
                document.getElementById("text").innerHTML = "编辑失败！";
                return false;
            });
            sharedProperties.imageEdited();
        } else if(sharedProperties.isCreate()) {
            var ni = sharedProperties.getImage();
            image = {
                UserId:ni.UserId,
                ImageName:ni.ImageName,
                Tag:1,
                Descrip:ni.Descrip,
                ImageID:1,
                Star:0,
                Fork:0,
                Comm:0,
                Status:0,
                Date:''
            };
            sharedProperties.imageCreated();
        } else {
            $location.path("/");
        }
        Image.commit({action:'commit',userid:$scope.user.userid},image).$promise.then(function(c){
            //$location.path("/term/"+ $scope.basic.ImageName);
            Image.push({action:'push',userid:$scope.user.userid},image).$promise.then(function(c) {
                document.getElementById("text").innerHTML = "创建成功！";
                //alert("创建成功！");
                //dialog.close();
                $window.location.href = "http://" + $location.host()+":9000/dashboard.html#/myimage";
            }, function(err) {
                //console.log(err);
                //alert("failure");
                document.getElementById("text").innerHTML = "创建失败！";
                $window.location.href = "http://" + $location.host()+":9000/dashboard.html#/myimage";
                return false;
            });
        }, function(err){
            //$scope.hideLoader();
            //$scope.error = err.data;
            document.getElementById("text").innerHTML = "创建失败！";
            $window.location.href = "http://" + $location.host()+":9000/dashboard.html#/myimage";
            return false;
        });
    }
    $scope.reload = function() {
        var src = document.getElementById("console").src;
        document.getElementById("console").src = src;
    }

}

/**
 * Loading Directive
 * @see http://tobiasahlin.com/spinkit/
 */

angular
    .module('Image')
    .directive('rdLoading', rdLoading);

function rdLoading() {
    var directive = {
        restrict: 'AE',
        template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
    };
    return directive;
};
/**
 * Widget Body Directive
 */

angular
    .module('Image')
    .directive('rdWidgetBody', rdWidgetBody);

function rdWidgetBody() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            loading: '@?',
            classes: '@?'
        },
        transclude: true,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Footer Directive
 */

angular
    .module('Image')
    .directive('rdWidgetFooter', rdWidgetFooter);

function rdWidgetFooter() {
    var directive = {
        requires: '^rdWidget',
        transclude: true,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Header Directive
 */

angular
    .module('Image')
    .directive('rdWidgetHeader', rdWidgetTitle);

function rdWidgetTitle() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            title: '@',
            icon: '@'
        },
        transclude: true,
        template: '<div class="widget-header"><i class="fa" ng-class="icon"></i> {{title}} <div class="pull-right" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Directive
 */

angular
    .module('Image')
    .directive('rdWidget', rdWidget);

function rdWidget() {
    var directive = {
        transclude: true,
        template: '<div class="widget" ng-transclude></div>',
        restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
        /* */
    }
};
/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Image')
    .factory('httpInterceptor',['$q','$cookies', function($q,$cookies){
        var isNeedAuth=function(uri,method){
            //check url is contain api
            if(uri.indexOf('api')>0){
                if(method == 'POST' || method== 'PUT' ||method=='DELETE'){
                    return true;
                }
            }
            return false;
        };
        var httpInterceptor = {
            request: function(config) {
                if(config.url.indexOf('api')>0){
                    config.url =apiService + config.url;
                }
                if (isNeedAuth(config.url,config.method)) {
                    if(($cookies.get("token"))==undefined) {
                        return $q.reject({status:401,error:'请登陆'});
                    }
                    config.headers['x-session-token'] = $cookies.get("token");
                }
                return config;
            },
            response : function(response) {
                return response;
            },
            responseError : function(response) {
                if (response.status == 401) {
                    alert('must login');
                    window.location.href = ssoUrl+window.location.href;
                    return $q.reject(response);
                } else if (response.status === 404) {
                    alert("404!");
                    return $q.reject(response);
                }
            },
            requestError : function(config){
                return $q.reject(config);
            }
        };
        return httpInterceptor;
    }
    ])
/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Image')
    .factory('Image', ['$resource',function($resource) {
        return $resource('/api/image/:action/:userid',{userid: '@userid'},{
            'save': { isArray: false, method: 'POST' },
            'edit': { isArray: false, method: 'POST' },
            'commit': { isArray: false, method: 'POST' },
            'push': {isArray:false, method: 'POST'}
        });
    }])
/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Image')
.factory('Images', ['$resource',function($resource) {
    return $resource('/api/images/:id/:action', {id: '@id',action:'@action' }, {
        'query': { isArray: true, method: 'GET' },
        'get': { isArray: false, method: 'GET' }
    });
}])
/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Image')
    .directive('isUnique',['$http', function($http){
        var name;
        return {
            restrict: 'A',
            require: 'ngModel',
            link: function(scope, elm, attrs, ctrl) {
                //ctrl.$parsers.push(function(viewValue) {
                scope.$watch(attrs.ngModel, function (viewValue) {
                    //elm.bind('blur',function (evt) {
                    name = scope.username + '-' + viewValue;
                });
                elm.bind('blur',function(evt) {
                    $http({
                        method: 'GET',
                        url: '/api/images/' + name + '/verify'
                    }).success(function(data, status, headers, cfg) {
                        ctrl.$setValidity('unique', data.IsUnique);
                    }).error(function(data, status, headers, cfg) {
                        ctrl.$setValidity('unique', false);
                    });
                });
                //element.bind('focus', function(evt) {
                //    element.addClass(FOCUS_CLASS);
                //    scope.$apply(function() {ctrl.$focused = true;});
                //}).bind('blur', function(evt) {
                //    element.removeClass(FOCUS_CLASS);
                //    scope.$apply(function() {ctrl.$focused = false;});
                //});
            }
        };
    }])
/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Image')
    .service('loginService',['User','$cookies','$window',function(User,$cookies,$window) {
        var verifyData = {
            App_id:null,
            App_key:null,
            Token:null
        }
        return {
            isLogin:function(){
                //console.log('login service!')
                if(($cookies.get("token"))==undefined) {
                    $window.location.href = ssoUrl+window.location.href;
                }
            },
            login:function(){
                verifyData.Token = $cookies.get("token");
                User.login({action:'islogin'},verifyData,function(c){
                    if(!c.is_login) {
                        window.location.href = ssoUrl+window.location.href;
                    }
                },function(err){
                    window.location.href = ssoUrl+window.location.href;
                });
            }
        }
    }])
/**
 * Created by zpl on 15-6-1.
 * http://7xj4fk.com1.z0.glb.clouddn.com/FpvJ2udpgKgf5D8sne5Ia5DosbHo?imageView2/1/w/200/h/100
 */

angular.module('Image')
    .factory('PictureService', [function(){
        return {
            ConvertKey2Src:function(key,h,w){
                if (key == "" || key==undefined){
                    key = "default.jpg"
                }
                return "http://7xj4fk.com1.z0.glb.clouddn.com/"+key+"?imageView2/1/"+"w/"+w+"/h/"+h;
            }
        }
    }])
/**
 * Created by zpl on 15-3-22.
 * 专门存储token
 */
angular.module('Image').
    factory('SessionService',['$cookies','User','$window', function($cookies,User,$window){
        return {
            getUserinfo: function(){
                this.login();
                var user ={
                    userid: $cookies.get("u_id"),
                    name:$cookies.get("u_name"),
                    avatar:$cookies.get("u_avatar")
                }
                //if(user == null){
                //    //TODO need login,mock login
                //    user = $localStorage.user;
                //}
                return user;
            },
            isLogin:function(){
                //if($localStorage.token)
                //    return true;
                //return false;
                if(($cookies.get("token"))==undefined) {
                    return false;
                }
                return true;
            },
            getToken:function(){
                return $cookies.get("token");
            },
            login:function(){
                console.log($cookies.get("token"))
                if(($cookies.get("token"))==undefined) {
                    alert("请先登陆")
                    $window.location.href = ssoUrl+window.location.href;
                }
            },
            logout:function(){
                $cookies.remove('token',{
                    domain:'.learn4me.com'
                });
                $cookies.remove('u_id',{
                    domain:'.learn4me.com'
                });
                $window.location.href = "/";
            }
        }
    }]);

/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Image')
    .service('sharedProperties', function () {
        var image = {};
        var create = false;
        var edit = false;
        var tag = ""
        return {
            createImages: function (value,argtag) {
                create = true;
                image = value;
                tag = argtag;
            },
            getDepTag : function(){
                return tag;
            },
            editImages: function (value) {
                edit = true;
                image = value;
            },
            getImage: function () {
                return image;
            },
            isCreate:function() {
                return create;
            },
            isEdit:function() {
                return edit;
            },
            imageCreated: function() {
                image = {};
                create = false;
            },
            imageEdited: function() {
                image = {};
                edit = false;
            }
        };
    })
/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Image')
.filter('trustAsResourceUrl', ['$sce', function($sce) {
    return function(val) {
        return $sce.trustAsResourceUrl(val);
    };
}])
/**
 * Created by Administrator on 2015/4/21.
 */
angular.module('Image')
    .factory('User', ['$resource',function($resource) {
        return $resource('/api/sso/:action',{},{
            'login':{isArray:false,method:'POST'},
            'logout':{isArray:false,method:'POST'}
        })
    }])